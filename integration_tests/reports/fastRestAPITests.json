{
  "collection": {
    "_": {
      "postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475"
    },
    "item": [
      {
        "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
        "name": "Buscar vendedores",
        "request": {
          "url": {
            "protocol": "{{PROTOCOL}}",
            "port": "{{PORT}}",
            "path": [
              "api",
              "v1",
              "sellers"
            ],
            "host": [
              "{{HOST}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                "    var response = pm.response.json();",
                "",
                "    pm.expect(response).to.be.an(\"array\");",
                "    pm.expect(response.length).to.eql(1);",
                "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                "",
                "});"
              ],
              "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475",
      "name": "meli",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2023-05-13T18:44:34.925Z",
      "postman_exported_using": "Postman/10.13.0"
    },
    "id": "4f3747b1-35eb-428b-a276-c6e920b3087d",
    "name": "meli env",
    "values": [
      {
        "type": "any",
        "value": "http",
        "key": "PROTOCOL"
      },
      {
        "type": "any",
        "value": "api-gateway",
        "key": "HOST"
      },
      {
        "type": "any",
        "value": "9000",
        "key": "PORT"
      }
    ]
  },
  "globals": {
    "id": "b5e60fd2-96fb-4a45-96c5-afd70790ba12",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 1,
        "pending": 0,
        "failed": 1
      },
      "tests": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 2,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684542654890,
      "completed": 1684542660005
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 1,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d33ed40c-4033-4fd1-b0fd-c20fc57a76c8",
          "httpRequestId": "d2410a45-433b-4937-945e-9c983f8cf29a"
        },
        "item": {
          "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
          "name": "Buscar vendedores",
          "request": {
            "url": {
              "protocol": "{{PROTOCOL}}",
              "port": "{{PORT}}",
              "path": [
                "api",
                "v1",
                "sellers"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                  "    var response = pm.response.json();",
                  "",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "    pm.expect(response.length).to.eql(1);",
                  "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                  "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                  "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                  "",
                  "});"
                ],
                "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "9000",
            "path": [
              "api",
              "v1",
              "sellers"
            ],
            "host": [
              "api-gateway"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "397fdf6f-7784-4137-9770-ab3c097f746c",
              "system": true
            },
            {
              "key": "Host",
              "value": "api-gateway:9000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
        "requestError": {
          "errno": -3001,
          "code": "EAI_AGAIN",
          "syscall": "getaddrinfo",
          "hostname": "api-gateway"
        },
        "assertions": [
          {
            "assertion": "Se retorna un 200 OK como respuesta positiva",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Se retorna un 200 OK como respuesta positiva",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Comenzamos con un vendedor en nuestro sistema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Comenzamos con un vendedor en nuestro sistema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "errno": -3001,
          "code": "EAI_AGAIN",
          "syscall": "getaddrinfo",
          "hostname": "api-gateway",
          "name": "Error",
          "message": "getaddrinfo EAI_AGAIN api-gateway",
          "stack": "Error: getaddrinfo EAI_AGAIN api-gateway\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:71:26)",
          "checksum": "4faa13e025cb4c5b5747f76ecfe155a8",
          "id": "4a42e259-7719-4a27-9e73-9fad3aa42a2c",
          "timestamp": 1684542659965,
          "stacktrace": [
            {
              "fileName": "node:dns",
              "lineNumber": 71,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
          "name": "Buscar vendedores",
          "request": {
            "url": {
              "protocol": "{{PROTOCOL}}",
              "port": "{{PORT}}",
              "path": [
                "api",
                "v1",
                "sellers"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                  "    var response = pm.response.json();",
                  "",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "    pm.expect(response.length).to.eql(1);",
                  "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                  "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                  "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                  "",
                  "});"
                ],
                "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475"
          },
          "item": [
            {
              "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
              "name": "Buscar vendedores",
              "request": {
                "url": {
                  "protocol": "{{PROTOCOL}}",
                  "port": "{{PORT}}",
                  "path": [
                    "api",
                    "v1",
                    "sellers"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                      "    var response = pm.response.json();",
                      "",
                      "    pm.expect(response).to.be.an(\"array\");",
                      "    pm.expect(response.length).to.eql(1);",
                      "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                      "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                      "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                      "",
                      "});"
                    ],
                    "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475",
            "name": "meli",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 1,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d33ed40c-4033-4fd1-b0fd-c20fc57a76c8",
          "httpRequestId": "d2410a45-433b-4937-945e-9c983f8cf29a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Se retorna un 200 OK como respuesta positiva",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "758674a9d020c2c28382ca4a212c3642",
          "id": "a5fd9c6e-decb-4cf5-b498-62980f4ca196",
          "timestamp": 1684542659993,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
          "name": "Buscar vendedores",
          "request": {
            "url": {
              "protocol": "{{PROTOCOL}}",
              "port": "{{PORT}}",
              "path": [
                "api",
                "v1",
                "sellers"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                  "    var response = pm.response.json();",
                  "",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "    pm.expect(response.length).to.eql(1);",
                  "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                  "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                  "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                  "",
                  "});"
                ],
                "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475"
          },
          "item": [
            {
              "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
              "name": "Buscar vendedores",
              "request": {
                "url": {
                  "protocol": "{{PROTOCOL}}",
                  "port": "{{PORT}}",
                  "path": [
                    "api",
                    "v1",
                    "sellers"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                      "    var response = pm.response.json();",
                      "",
                      "    pm.expect(response).to.be.an(\"array\");",
                      "    pm.expect(response.length).to.eql(1);",
                      "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                      "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                      "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                      "",
                      "});"
                    ],
                    "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475",
            "name": "meli",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 1,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d33ed40c-4033-4fd1-b0fd-c20fc57a76c8",
          "httpRequestId": "d2410a45-433b-4937-945e-9c983f8cf29a",
          "scriptId": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
          "execution": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Comenzamos con un vendedor en nuestro sistema",
          "message": "Unexpected token u in JSON at position 0",
          "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "ca1c95dbfb64a5f85d81b2735d18b924",
          "id": "fa9bb687-0914-4cfe-a688-10007a95bbc9",
          "timestamp": 1684542659995,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
          "name": "Buscar vendedores",
          "request": {
            "url": {
              "protocol": "{{PROTOCOL}}",
              "port": "{{PORT}}",
              "path": [
                "api",
                "v1",
                "sellers"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                  "    var response = pm.response.json();",
                  "",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "    pm.expect(response.length).to.eql(1);",
                  "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                  "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                  "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                  "",
                  "});"
                ],
                "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475"
          },
          "item": [
            {
              "id": "cb74390a-3695-4334-b2a8-d66f1088ea1a",
              "name": "Buscar vendedores",
              "request": {
                "url": {
                  "protocol": "{{PROTOCOL}}",
                  "port": "{{PORT}}",
                  "path": [
                    "api",
                    "v1",
                    "sellers"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Se retorna un 200 OK como respuesta positiva\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Comenzamos con un vendedor en nuestro sistema\", function () {",
                      "    var response = pm.response.json();",
                      "",
                      "    pm.expect(response).to.be.an(\"array\");",
                      "    pm.expect(response.length).to.eql(1);",
                      "    pm.expect(response[0].seller_id).to.eql(\"a391cf49-de65-11ed-974b-0242ac1c0002\")",
                      "    pm.expect(response[0].businessName).to.eql(\"MAROLIO\")",
                      "    pm.expect(response[0].email).to.eql(\"ventas@marolio.com\")",
                      "",
                      "});"
                    ],
                    "_lastExecutionId": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "b0d2fea3-d575-45d9-9468-fe8221b31475",
            "name": "meli",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 1,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d33ed40c-4033-4fd1-b0fd-c20fc57a76c8",
          "httpRequestId": "d2410a45-433b-4937-945e-9c983f8cf29a",
          "scriptId": "c6510e2c-795a-41bc-90a2-d0f9a0068ac9",
          "execution": "b05955a0-9fc0-47cb-b5ce-a85788ded13d"
        }
      }
    ],
    "error": null
  }
}