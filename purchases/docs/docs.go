// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/purchases": {
            "post": {
                "description": "Make User buy Product by ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Make a purchase.",
                "parameters": [
                    {
                        "description": "Register",
                        "name": "Purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePurchaseRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PurchaseDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Delete all purchases from product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Delete all purchases from product",
                "parameters": [
                    {
                        "description": "Register",
                        "name": "IDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ProductsIDs"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/purchases/products/{id}": {
            "get": {
                "description": "Find purchases from product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Find purchases from product.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID from product",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreatePurchaseRequest": {
            "type": "object",
            "required": [
                "buyer_email",
                "buyer_name",
                "id_product",
                "id_user",
                "product_name",
                "seller_email",
                "seller_name",
                "total",
                "units"
            ],
            "properties": {
                "buyer_email": {
                    "type": "string"
                },
                "buyer_name": {
                    "type": "string"
                },
                "id_product": {
                    "type": "string"
                },
                "id_user": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "seller_email": {
                    "type": "string"
                },
                "seller_name": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "units": {
                    "type": "integer"
                }
            }
        },
        "dto.PurchaseDTO": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_product": {
                    "type": "string"
                },
                "id_user": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "units": {
                    "type": "integer"
                }
            }
        },
        "handler.ProductsIDs": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
