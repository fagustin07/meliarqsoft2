definitions:
  dto.CreateCustomerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      surname:
        type: string
    required:
    - email
    - name
    - surname
    type: object
  dto.CreateSellerRequest:
    properties:
      business_name:
        type: string
      email:
        type: string
    required:
    - business_name
    - email
    type: object
  dto.CustomerDTO:
    properties:
      email:
        type: string
      name:
        type: string
      surname:
        type: string
      user_id:
        type: string
    type: object
  dto.CustomerID:
    properties:
      user_id:
        type: string
    type: object
  dto.SellerDTO:
    properties:
      businessName:
        type: string
      email:
        type: string
      seller_id:
        type: string
    type: object
  dto.SellerID:
    properties:
      seller_id:
        type: string
    type: object
  dto.UpdateCustomerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      surname:
        type: string
    required:
    - email
    - name
    - surname
    type: object
  dto.UpdateSellerRequest:
    properties:
      business_name:
        type: string
      email:
        type: string
    required:
    - business_name
    - email
    type: object
info:
  contact: {}
paths:
  /customers:
    get:
      consumes:
      - application/json
      description: Find customer with given id
      parameters:
      - description: find name
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CustomerDTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Find customer
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Create customer
      parameters:
      - description: Register
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CustomerID'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a customer
      tags:
      - Customers
  /customers/{id}:
    delete:
      description: Unregister customer from a customer
      parameters:
      - description: ID from customer to unregister
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Unregister a customer
      tags:
      - Customers
    put:
      description: Update customer from a customer
      parameters:
      - description: Register
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCustomerRequest'
      - description: ID from customer to update
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Update a customer
      tags:
      - Customers
  /sellers:
    get:
      consumes:
      - application/json
      description: Find sellers that contains given business name
      parameters:
      - description: find name
        in: query
        name: business_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.SellerDTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Find sellers
      tags:
      - Sellers
    post:
      consumes:
      - application/json
      description: Create seller
      parameters:
      - description: Register
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSellerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.SellerID'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a seller
      tags:
      - Sellers
  /sellers/{id}:
    delete:
      description: Unregister seller from a seller
      parameters:
      - description: ID from seller to unregister
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Unregister a seller
      tags:
      - Sellers
    put:
      consumes:
      - application/json
      description: Update seller from a seller
      parameters:
      - description: Register
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSellerRequest'
      - description: ID from seller to update
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update a seller
      tags:
      - Sellers
swagger: "2.0"
